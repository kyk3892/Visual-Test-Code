{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"add.browser.breakpoint": "브라우저 중단점 추가",
			"attach.node.process": "노드 프로세스에 연결(미리 보기)",
			"browser.address.description": "디버그된 브라우저에서 수신 대기 중인 IP 주소 또는 호스트 이름입니다.",
			"browser.attach.port.description": "원격에서 브라우저를 디버그하는 데 사용할 포트입니다. 브라우저를 시작할 때 `--remote-debugging-port`로 제공됩니다.",
			"browser.baseUrl.description": "경로 baseUrl을 확인할 기본 URL입니다. 디스크의 파일에 URL을 매핑할 때 baseURL이 잘립니다. 기본값은 시작 URL 도메인입니다.",
			"browser.browserLaunchLocation.description": "브라우저가 한 위치에서 시작되도록 강제 적용합니다. 원격 작업 영역(예: ssh 또는 WSL 사용)에서 로컬이 아닌 원격 머신의 브라우저를 여는 데 사용할 수 있습니다.",
			"browser.cwd.description": "런타임 실행 파일의 선택적 작업 디렉터리입니다.",
			"browser.disableNetworkCache.description": "각 요청에 대한 네트워크 캐시를 건너뛸지 여부를 제어합니다.",
			"browser.env.description": "브라우저용 환경 키/값 쌍의 선택적 사전입니다.",
			"browser.file.description": "브라우저에서 열 로컬 html 파일",
			"browser.includeDefaultArgs.description": "(디버깅을 어렵게 만들 수 있는 기능을 사용하지 않도록 하기 위해) 기본 브라우저 시작 인수를 시작에 포함할지 여부.",
			"browser.inspectUri.description": "inspectUri를 재작성하는 데 사용할 형식: `{curlyBraces}`의 키를 보간하는 템플릿 문자열입니다. 사용 가능한 키는 다음과 같습니다.\n - `url.*`는 실행 중인 애플리케이션의 구문 분석된 주소입니다. 예: `{url.port}`, `{url.hostname}`\n - `port`는 Chrome에서 수신하는 디버그 포트입니다.\n - `browserInspectUri`는 시작된 브라우저의 검사기 URI입니다.\n - `wsProtocol`은 힌트 WebSocket 프로토콜입니다. 원래 URL이 `https`인 경우 `wss`로 설정되고, 그렇지 않은 경우 `ws`로 설정됩니다.",
			"browser.launch.port.description": "브라우저에서 수신 대기할 포트입니다. 기본값은 \"0\"입니다. 기본값으로 설정하면 파이프를 통해 브라우저가 디버그됩니다. 이는 일반적으로 더 안전하며 다른 도구에서 브라우저에 연결해야 하는 경우가 아니면 선택해야 합니다.",
			"browser.pathMapping.description": "로컬 폴더의 URL/경로 매핑, 브라우저에서 스크립트를 디스크의 스크립트로 확인",
			"browser.profileStartup.description": "true인 경우 프로세스가 시작되면 프로파일링이 즉시 시작됩니다.",
			"browser.restart": "브라우저 연결이 종료된 경우 다시 연결할지 여부",
			"browser.revealPage": "포커스 탭",
			"browser.runtimeArgs.description": "런타임 실행 파일에 전달되는 선택적 인수입니다.",
			"browser.runtimeExecutable.description": "'canary', 'stable', 'custom', 브라우저 실행 파일의 경로 중 하나입니다. 사용자 지정은 사용자 지정 래퍼, 사용자 지정 빌드 또는 CHROME_PATH 환경 변수를 의미합니다.",
			"browser.runtimeExecutable.edge.description": "'canary', 'stable', 'dev', 'custom' 또는 브라우저 실행 파일의 경로입니다. custom은 사용자 지정 래퍼, 사용자 지정 빌드 또는 EDGE_PATH 환경 변수를 나타냅니다.",
			"browser.server.description": "시작할 웹 서버를 구성합니다. '노드' 시작 작업과 동일한 구성을 수행합니다.",
			"browser.skipFiles.description": "디버그할 때 건너뛸 파일 또는 폴더 이름이나 경로 GLOB의 배열입니다.",
			"browser.smartStep.description": "소스 매핑된 파일의 매핑되지 않은 줄을 자동으로 단계별로 실행합니다. 이러한 줄의 예로는 async/await 또는 기타 기능을 다운 컴파일하는 경우 TypeScript에서 자동으로 생성하는 코드가 있습니다.",
			"browser.sourceMapPathOverrides.description": "sourcemap의 위치에서 디스크의 위치로 소스 파일의 위치를 다시 작성하기 위한 매핑 세트입니다. 자세한 내용은 추가 정보를 참조하세요.",
			"browser.sourceMaps.description": "JavaScript 소스 맵을 사용합니다(있는 경우).",
			"browser.targetSelection": "URL 필터와 일치하는 모든 대상에 연결할 것인지(\"자동\") 또는 하나를 선택하도록 물을 것인지(\"선택\")의 여부입니다.",
			"browser.timeout.description": "이 밀리초 동안 브라우저에 연결을 다시 시도합니다. 기본값은 10000ms입니다.",
			"browser.url.description": "이 정확한 URL이 있는 탭을 검색하고 탭을 찾으면 연결합니다.",
			"browser.urlFilter.description": "이 URL로 페이지를 검색하고 해당 페이지가 있는 경우 페이지에 연결합니다. * 와일드카드를 사용할 수 있습니다.",
			"browser.userDataDir.description": "기본적으로 브라우저는 임시 폴더에 있는 별도의 사용자 프로필을 사용하여 시작됩니다. 재정의하려면 이 옵션을 사용합니다. 기본 사용자 프로필을 사용하여 시작하려면 [false]로 설정합니다.",
			"browser.webRoot.description": "웹 서버 루트의 작업 영역 절대 경로를 지정합니다. 디스크의 파일에 대한 '/app.js' 같은 경로를 확인하는 데 사용됩니다. \"/\"의 pathMapping에 대한 축약형입니다.",
			"chrome.attach.description": "이미 디버그 모드인 Chrome 인스턴스에 연결",
			"chrome.attach.label": "Chrome: 연결",
			"chrome.label": "Chrome(미리보기)",
			"chrome.launch.description": "Chrome을 시작하여 URL 디버그",
			"chrome.launch.label": "Chrome: 시작",
			"configuration.autoExpandGetters": "속성 getter가 자동으로 확장되는지 구성합니다. false인 경우 getter가 `get propertyName`으로 표시되고 클릭하는 경우에만 평가됩니다.",
			"configuration.automaticallyTunnelRemoteServer": "원격 웹 앱을 디버깅할 때 원격 서버를 로컬 컴퓨터에 자동으로 터널링할지 여부를 구성합니다.",
			"configuration.debugByLinkOptions": "디버그 터미널 내부에서 클릭한 열린 링크를 디버깅할 때 사용되는 옵션입니다. 이 동작을 사용하지 않도록 설정하려면 \"false\"로 설정할 수 있습니다.",
			"configuration.npmScriptLensLocation": "npm 스크립트에 \"실행\" 및 \"디버그\" 코드 렌즈가 표시되어야 하는 위치입니다. \"all\", 스크립트, 스크립트 섹션의 \"top\" 또는 \"never\"일 수 있습니다.",
			"configuration.pickAndAttachOptions": "'디버그: Node.js 프로세스에 연결' 명령을 통해 프로세스를 디버그할 때 사용되는 기본 옵션입니다.",
			"configuration.suggestPrettyPrinting": "시작할 때 축소되어 보이는 경우 JavaScript 코드 자동 서식 지정을 제안할 지 여부입니다.",
			"configuration.terminalOptions": "JavaScript 디버그 터미널 및 npm 스크립트에 대한 기본 시작 옵션입니다.",
			"configuration.usePreview": "Node.js 및 Chrome을 위한 새로운 미리 보기 JavaScript 디버거를 사용합니다.",
			"configuration.warnOnLongPrediction": "중단점 예측에 시간이 걸리는 경우 로드 프롬프트를 표시할지 여부입니다.",
			"debug.npm.edit": "package.json 편집",
			"debug.npm.noScripts": "package.json에서 npm 스크립트를 찾을 수 없습니다.",
			"debug.npm.noWorkspaceFolder": "npm 스크립트를 디버그하려면 작업 영역 폴더를 열어야 합니다.",
			"debug.npm.parseError": "{0}을(를) 읽을 수 없습니다. {1}",
			"debug.npm.script": "NPM 스크립트 디버그",
			"debug.terminal.attach": "Node.js 터미널 프로세스에 연결",
			"debug.terminal.label": "JavaScript 디버그 터미널 만들기",
			"debug.terminal.program.description": "시작된 터미널에서 실행할 명령입니다. 제공되지 않으면 프로그램을 시작하지 않고 터미널이 열립니다.",
			"debug.terminal.snippet.label": "디버그 터미널에서 \"npm start\" 실행",
			"debug.terminal.toggleAuto": "터미널 Node.js 자동 연결 설정/해제",
			"debug.terminal.welcome": "[Node.js 디버그 터미널](command:extension.pwa-node-debug.createDebuggerTerminal)\n\nNode.js 디버그 터미널을 사용하여 명령줄에서 실행하는 JavaScript를 즉시 디버깅할 수 있습니다.",
			"edge.address.description": "웹 보기를 디버그할 때 웹 보기에서 수신 대기하는 IP 주소 또는 호스트 이름입니다. 설정하지 않은 경우 자동으로 검색됩니다.",
			"edge.attach.description": "이미 디버그 모드에 있는 Edge 인스턴스에 연결",
			"edge.attach.label": "Edge: 연결",
			"edge.label": "Edge(미리 보기)",
			"edge.launch.description": "Edge를 시작하여 URL 디버그",
			"edge.launch.label": "Edge: 시작",
			"edge.port.description": "웹 보기를 디버그할 때 웹 보기 디버거에서 수신 대기하는 포트입니다. 설정하지 않은 경우 자동으로 검색됩니다.",
			"edge.useWebView.description": "(Microsoft Edge(Chromium) 전용) 'true'이면 디버거는 런타임 실행 파일을 WebView가 포함된 호스트 애플리케이션으로 취급하여 WebView 스크립트 콘텐츠를 디버그할 수 있도록 합니다.",
			"errors.timeout": "{0}: {1}ms 후 시간 초과",
			"extension.description": "Node.js 프로그램 및 Chrome 디버깅을 위한 확장입니다.",
			"extensionHost.label": "VS Code 확장 개발(미리 보기)",
			"extensionHost.launch.config.name": "확장 시작",
			"extensionHost.launch.env.description": "확장 호스트에 전달된 환경 변수입니다.",
			"extensionHost.launch.runtimeExecutable.description": "VS Code의 절대 경로입니다.",
			"extensionHost.launch.stopOnEntry.description": "시작된 후 확장 호스트를 자동으로 중지합니다.",
			"extensionHost.snippet.launch.description": "디버그 모드에서 VS Code 확장 시작",
			"extensionHost.snippet.launch.label": "VS Code 확장 개발",
			"longPredictionWarning.disable": "다시 표시 안 함",
			"longPredictionWarning.message": "중단점을 구성하는 데 다소 시간이 소요됩니다. launch.json에서 'outFiles'를 업데이트하여 이 속도를 높일 수 있습니다.",
			"longPredictionWarning.noFolder": "열려 있는 작업 영역 폴더가 없습니다.",
			"longPredictionWarning.open": "launch.json 열기",
			"node.address.description": "디버그할 프로세스의 TCP/IP 주소입니다. 기본값은 'localhost'입니다.",
			"node.attach.attachExistingChildren.description": "이미 생성된 자식 프로세스에 연결하려고 할지 여부입니다.",
			"node.attach.attachSpawnedProcesses.description": "연결된 프로세스에서 환경 변수를 설정하여 생성된 자식을 추적할지 여부입니다.",
			"node.attach.config.name": "연결",
			"node.attach.continueOnAttach": "true이면 시작되어 `--inspect-brk`를 기다리는 프로그램을 자동으로 다시 시작합니다.",
			"node.attach.processId.description": "연결할 프로세스의 ID입니다.",
			"node.attach.restart.description": "연결이 끊어지면 프로그램에 다시 연결해 보세요.",
			"node.console.title": "노드 디버그 콘솔",
			"node.disableOptimisticBPs.description": "해당 파일에 대한 sourcemap이 로드될 때까지 파일에서 중단점을 설정하지 마세요.",
			"node.label": "Node.js(미리 보기)",
			"node.launch.args.description": "프로그램에 전달된 명령줄 인수입니다.",
			"node.launch.autoAttachChildProcesses.description": "디버거를 새로 생성된 자식 프로세스에 자동으로 연결합니다.",
			"node.launch.config.name": "시작",
			"node.launch.console.description": "디버그 대상을 시작할 위치입니다.",
			"node.launch.console.externalTerminal.description": "사용자 설정을 통해 구성 가능한 외부 터미널",
			"node.launch.console.integratedTerminal.description": "VS Code의 통합 터미널",
			"node.launch.console.internalConsole.description": "VS Code 디버그 콘솔(프로그램에서 입력 읽기를 지원하지 않음)",
			"node.launch.cwd.description": "디버그 중인 프로그램 작업 디렉터리의 절대 경로입니다.",
			"node.launch.env.description": "프로그램에 전달된 환경 변수입니다. 'null' 값은 환경에서 변수를 제거합니다.",
			"node.launch.envFile.description": "환경 변수 정의를 포함하는 파일의 절대 경로입니다.",
			"node.launch.logging": "로깅 구성",
			"node.launch.logging.cdp": "Chrome DevTools 프로토콜 메시지에 대한 로그 파일 경로",
			"node.launch.logging.dap": "디버그 어댑터 프로토콜 메시지에 대한 로그 파일 경로",
			"node.launch.outputCapture.description": "출력 메시지를 캡처할 위치입니다. `console`로 설정된 경우에는 기본 디버그 API이고, 그러지 않고 `std`로 설정된 경우에는 stdout/stderr 스트림입니다.",
			"node.launch.program.description": "프로그램의 절대 경로입니다. 생성된 값은 package.json 및 열린 파일을 보고 추측한 것입니다. 이 특성을 편집하세요.",
			"node.launch.restart.description": "0이 아닌 종료 코드로 종료되는 경우 프로그램을 다시 시작해 보세요.",
			"node.launch.runtimeArgs.description": "런타임 실행 파일에 전달되는 선택적 인수입니다.",
			"node.launch.runtimeExecutable.description": "사용할 런타임입니다. PATH에서 사용할 수 있는 런타임의 이름 또는 절대 경로입니다. 생략하면 `node`로 간주합니다.",
			"node.launch.runtimeSourcemapPausePatterns": "진입점 중단점을 수동으로 삽입할 패턴 목록입니다. 이는 시작 전에는 존재하지 않거나 검색할 수 없는 sourcemap을 사용할 때 디버거가 중단점을 설정할 수 있어 유용할 수 있습니다(예: [Serverless Framework를 사용하는 경우](https://github.com/microsoft/vscode-js-debug/issues/492)).",
			"node.launch.runtimeVersion.description": "사용할 `node` 런타임의 버전입니다. `nvm`이 필요합니다.",
			"node.launch.useWSL.deprecation": "'useWSL'은 사용되지 않으며 지원이 중단됩니다. 대신 '원격 - WSL' 확장을 사용하세요.",
			"node.launch.useWSL.description": "Linux용 Windows 하위 시스템을 사용합니다.",
			"node.localRoot.description": "프로그램이 포함된 로컬 디렉터리의 경로입니다.",
			"node.pauseForSourceMap.description": "들어오는 각 스크립트에 대해 소스 맵이 로드될 때까지 기다릴지 여부입니다. 이 작업에는 성능 오버헤드가 발생하며 'rootPath'를 사용하도록 설정하는 경우 디스크에서 실행될 때 사용하지 않도록 설정해도 됩니다.",
			"node.port.description": "연결할 디버그 포트입니다. 기본값은 5858입니다.",
			"node.processattach.config.name": "프로세스에 연결",
			"node.profileStartup.description": "true인 경우 프로세스가 시작되면 프로파일링이 즉시 시작됩니다.",
			"node.remoteRoot.description": "프로그램이 포함된 원격 디렉터리의 절대 경로입니다.",
			"node.resolveSourceMapLocations.description": "소스 맵을 사용하여 로컬 파일을 확인할 수 있는 위치(폴더 및 URL)에 대한 minimatch 패턴 목록입니다. 외부 소스 매핑 코드에서 잘못 중단되지 않도록 하는 데 사용할 수 있습니다. 패턴은 \"!\" 접두사를 붙여 제외할 수 있습니다. 제한을 피하기 위해 빈 배열 또는 null로 설정할 수 있습니다.",
			"node.showAsyncStacks.description": "현재 호출 스택을 생성하는 비동기 호출을 표시합니다.",
			"node.snippet.attach.description": "실행 중인 노드 프로그램에 연결",
			"node.snippet.attach.label": "Node.js: 연결",
			"node.snippet.attachProcess.description": "프로세스 선택기를 열어 연결할 Node 프로세스 선택 ",
			"node.snippet.attachProcess.label": "Node.js: 프로세스에 연결",
			"node.snippet.electron.description": "Electron 주 프로세스 디버그",
			"node.snippet.electron.label": "Node.js: Electron 주",
			"node.snippet.gulp.description": "Gulp 작업 디버그(프로젝트에 로컬 Gulp가 설치되어 있는지 확인하세요.)",
			"node.snippet.gulp.label": "Node.js: Gulp 작업",
			"node.snippet.launch.description": "디버그 모드에서 노드 프로그램 시작",
			"node.snippet.launch.label": "Node.js: 프로그램 실행",
			"node.snippet.mocha.description": "Mocha 테스트 디버그",
			"node.snippet.mocha.label": "Node.js: Mocha 테스트",
			"node.snippet.nodemon.description": "nodemon을 사용하여 소스 변경 내용에 대한 디버그 세션 다시 시작",
			"node.snippet.nodemon.label": "Node.js: Nodemon 설정",
			"node.snippet.npm.description": "npm 'debug' 스크립트를 통해 노드 프로그램 시작",
			"node.snippet.npm.label": "Node.js: NPM을 통해 시작",
			"node.snippet.remoteattach.description": "원격 노드 프로그램의 디버그 포트에 연결합니다.",
			"node.snippet.remoteattach.label": "Node.js: 원격 프로그램에 연결",
			"node.snippet.yo.description": "yeoman 생성기 디버그(프로젝트 폴더에서 `npm link`를 실행하여 설치)",
			"node.snippet.yo.label": "Node.js: Yeoman 생성기",
			"node.sourceMapPathOverrides.description": "소스맵의 정보로부터 디스크의 위치로 소스 파일 위치를 다시 쓰기 위한 매핑 집합입니다.",
			"node.sourceMaps.description": "JavaScript 소스 맵을 사용합니다(있는 경우).",
			"node.stopOnEntry.description": "시작된 후 프로그램을 자동으로 중지합니다.",
			"node.timeout.description": "Node.js 연결을 다시 시도하는 시간(밀리초)입니다. 기본값은 10,000ms입니다.",
			"outFiles.description": "소스 맵이 사용하도록 설정되면 이 전역 패턴은 생성된 JavaScript 파일을 지정합니다. 패턴이 '!'로 시작하면 파일이 제외됩니다. 지정하지 않을 경우 생성된 코드는 소스와 동일한 디렉터리에 있어야 합니다.",
			"pretty.print.script": "디버그를 위한 예쁜 인쇄",
			"profile.start": "성능 프로필 수행",
			"profile.stop": "성능 프로필 중지",
			"remove.browser.breakpoint": "브라우저 중단점 제거",
			"remove.browser.breakpoint.all": "모든 브라우저 중단점 제거",
			"skipFiles.description": "디버그할 때 건너뛰는 파일의 GLOB 패턴 배열입니다. `<node_internals>/**` 패턴은 모든 내부 Node.js 모듈과 일치합니다.",
			"smartStep.description": "다시 원래 소스에 매핑할 수 없는 생성된 코드를 자동으로 단계별로 실행합니다.",
			"start.with.stop.on.entry": "디버깅 시작 및 항목에서 중지",
			"toggle.skipping.this.file": "이 파일 건너뛰기 토글",
			"trace.boolean.description": "추적을 'true'로 설정하여 디스크에 진단 로그를 쓸 수 있습니다.",
			"trace.console.description": "로그가 디버그 콘솔로 반환되는지 여부를 구성합니다.",
			"trace.description": "생성되는 진단 출력을 구성합니다.",
			"trace.level.description": "기록된 로그 수준을 구성합니다.",
			"trace.logFile.description": "온디스크 로그가 기록되는 위치를 구성합니다.",
			"trace.stdio.description": "시작된 애플리케이션 또는 브라우저에서 추적 데이터를 반활하지 여부.",
			"trace.tags.description": "기록되는 로그 유형을 구성합니다."
		}
	}
}